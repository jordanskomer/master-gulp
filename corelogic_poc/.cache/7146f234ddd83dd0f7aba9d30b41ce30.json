{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nlet ratio = 9 / 16;\nlet width,\n    height = 0;\n\nasync function resizeCanvases() {\n  let canvases = document.getElementsByClassName('j-canvas');\n  for (const canvas of canvases) {\n    canvas.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n    canvas.style.paddingBottom = height / width * 100 + '%';\n  }\n}\n\nasync function resizeImages() {\n  let images = document.getElementsByClassName('m-animation__image');\n  for (const image of images) {\n    image.style.width = width + 'px';\n    image.style.height = height + 'px';\n  }\n}\n\nlet resizer7000 = () => {\n  width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  height = Math.round(width * ratio * 100) / 100;\n  resizeImages();\n};\n\nexports.default = {\n  init: () => {\n    resizer7000();\n    resizeCanvases();\n    if (window.attachEvent) {\n      window.attachEvent('onresize', resizer7000);\n    } else if (window.addEventListener) {\n      window.addEventListener('resize', resizer7000, true);\n    }\n  }\n};"},"hash":"4d11dbf2fe43f1b1fc82f1693a286195"}